y <- remove_outliers(x)
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
set.seed(1)
x <- rnorm(100)
x <- c(-10, x, 10)
y <- remove_outliers(x)
par(mfrow = c(1, 2))
boxplot(x)
boxplot(y)
y=runif(5)
head(y)
cochran.test(y,rep(5,5))
cochran.test(y,rep(100,5))
dixon.test(x,type=10)
x = rnorm(10)
dixon.test(x,type=10)
x = rnorm(100)
dixon.test(x,type=100)
grubbs.test(x)
grubbs.test(x,type=20)
grubbs.test(z,type=20)
z = rnorm(10)
grubbs.test(z,type=20)
grubbs.test(z,type=11)
outlier(x)
outlier(x,opposite=TRUE)
dim(x) <- c(20,5)
outlier(x)
outlier(x,opposite=TRUE)
qcochran(0.05,5,5)
pcochran(0.293,5,5)
outlier(x)
outlier(x,opposite=TRUE)
rm.outlier(x)
rm.outlier(x,opposite=TRUE)
dim(x) <- c(20,5)
outlier(x)
outlier(x,logical=TRUE)
outlier(x,logical=TRUE,opposite=TRUE)
rm.outlier(x)
rm.outlier(x,opposite=TRUE)
scores(x)
scores(x,prob=1)
scores(x,prob=0.5)
scores(x,prob=0.1)
scores(x,prob=0.93)
scores(x,type="iqr")
scores(x,type="mad")
scores(x,prob=0)
x <- c(-10, x, 10)
y <- remove_outliers(x)
## png()
par(mfrow = c(1, 2))
boxplot(x)
boxplot(y)
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x_rm <- x
x_rm[x < (qnt[1] - H)] <- NA
x_rm[x > (qnt[2] + H)] <- NA
x_rm
}
x <- c(-10, x, 10)
x_rm <- remove_outliers(x)
## png()
par(mfrow = c(1, 2))
boxplot(x)
boxplot(x_rm)
## dev.off()
ox <-outlier(x)
head(ox)
ox <-outlier(x)
head(dat1)
chisq.out.test(x)
chisq.out.test(x,opposite=TRUE)
dat <-read.csv("C:/Users/Haineycf/Documents/CAMP/CAMP_csv/camp_teach.csv",header =T, na.strings=c(""))
## change dataframe for all subsequent analysis
dat$Factors <- paste(dat$anypet,dat$woodstove, dat$dehumid, dat$parent_smokes,
dat$any_smokes)
dat$group1[dat$GENDER == "f" ]<-1
dat$group1[dat$GENDER == "m" ]<-2
#unique(dat$ETHNIC)
dat$group2[dat$ETHNIC == "b" ]<-1
dat$group2[dat$ETHNIC == "w" ]<-2
dat$group2[dat$ETHNIC == "h" ]<-3
dat$group2[dat$ETHNIC == "o" ]<-4
library(outliers)
dat1 <-dat[ which(dat$hemog >0), ]
cochran.test(hemog~group1,dat1)
dat_cochran <-cochran.test(hemog~group1,dat1)
dat_cochran
dat_grubs <- grubbs.test(dat)
dat_grubs <- grubbs.test(dat$hemog)
dat_grubs
Chauvenet <-
function(v, loop=FALSE){
#require(NORMT3) # for erfc
erfcR <- function (x) as.real(erfc(x))
fun1 <- function(x) x > 0.5
z <- abs( (v - mean(v)) )/sd(v) # absolute value
ez <- erfcR(z)
ezn <- length(v)*ez
vt <- as.logical( vapply(ezn, FUN=fun1, FUN.VALUE=length(ezn)) ) #
v <- v[vt]
if (loop==TRUE){
while (FALSE %in% vt){
if (length(v)==2) {return(v)}
z <- abs( (v - mean(v)) )/sd(v)
ez <- erfcR(z)
ezn <- length(v)*ez
vt <- as.logical( vapply(ezn, FUN=fun1, FUN.VALUE=length(ezn)) )
v <- v[vt]
}
}
return(v)
}
v(x)
function(v, loop=FALSE){
#require(NORMT3) # for erfc
erfcR <- function (x) as.real(erfc(x))
fun1 <- function(x) x > 0.5
z <- abs( (v - mean(v)) )/sd(v) # absolute value
ez <- erfcR(z)
ezn <- length(v)*ez
vt <- as.logical( vapply(ezn, FUN=fun1, FUN.VALUE=length(ezn)) ) #
v <- v[vt]
if (loop==TRUE){
while (FALSE %in% vt){
if (length(v)==2) {return(v)}
z <- abs( (v - mean(v)) )/sd(v)
ez <- erfcR(z)
ezn <- length(v)*ez
vt <- as.logical( vapply(ezn, FUN=fun1, FUN.VALUE=length(ezn)) )
v <- v[vt]
}
}
return(v)
}
Chauvenet <-
function(v, loop=FALSE){
#require(NORMT3) # for erfc
erfcR <- function (x) as.real(erfc(x))
fun1 <- function(x) x > 0.5
z <- abs( (v - mean(v)) )/sd(v) # absolute value
ez <- erfcR(z)
ezn <- length(v)*ez
vt <- as.logical( vapply(ezn, FUN=fun1, FUN.VALUE=length(ezn)) ) #
v <- v[vt]
if (loop==TRUE){
while (FALSE %in% vt){
if (length(v)==2) {return(v)}
z <- abs( (v - mean(v)) )/sd(v)
ez <- erfcR(z)
ezn <- length(v)*ez
vt <- as.logical( vapply(ezn, FUN=fun1, FUN.VALUE=length(ezn)) )
v <- v[vt]
}
}
return(v)
}
Chauvenet(x)
Chauvenet <-
function(v, loop=FALSE){
#require(NORMT3) # for erfc
erfcR <- function (x) as.double(erfc(x))
fun1 <- function(x) x > 0.5
z <- abs( (v - mean(v)) )/sd(v) # absolute value
ez <- erfcR(z)
ezn <- length(v)*ez
vt <- as.logical( vapply(ezn, FUN=fun1, FUN.VALUE=length(ezn)) ) #
v <- v[vt]
if (loop==TRUE){
while (FALSE %in% vt){
if (length(v)==2) {return(v)}
z <- abs( (v - mean(v)) )/sd(v)
ez <- erfcR(z)
ezn <- length(v)*ez
vt <- as.logical( vapply(ezn, FUN=fun1, FUN.VALUE=length(ezn)) )
v <- v[vt]
}
}
return(v)
}
Chauvenet(x)
max(dat$hemog)
max(dat1$hemog)
max(dat_manual$hemog)
to.remove <- c(144,197,294, 353,394,744,867,872,875,1003,1016,1025,385)
dat_manual <-dat[!dat$id %in% to.remove, ]
max(dat_manual$hemog)
max(dat_manual$hemog,na.rm = TRUE)
grubbs.test(dat_manual$hemog)
wbc_grub <- grubbs.test(dat$wbc)
wbc_grub
wbc_inter_grub <-grubbs.test(dat_interquartile_rm$wbc_new)
wbc_Cheb_grub <-grubbs.test(dat_manual_rm$wbc)
dat <-read.csv("C:/Users/Haineycf/Documents/CAMP/CAMP_csv/camp_teach.csv",header =T, na.strings=c(""))
## change dataframe for all subsequent analysis
dat$Factors <- paste(dat$anypet,dat$woodstove, dat$dehumid, dat$parent_smokes,
dat$any_smokes)
dat$group1[dat$GENDER == "f" ]<-1
dat$group1[dat$GENDER == "m" ]<-2
#unique(dat$ETHNIC)
dat$group2[dat$ETHNIC == "b" ]<-1
dat$group2[dat$ETHNIC == "w" ]<-2
dat$group2[dat$ETHNIC == "h" ]<-3
dat$group2[dat$ETHNIC == "o" ]<-4
## plot raw data looking for outliers
opar <- par(no.readonly=TRUE)
par(fig=c(0,0.8,0,0.8))
plot(dat$hemog,dat$wbc,
xlab = "log(hemog)",
ylab = "wbc",
log= "x")
par(fig=c(0,0.8,.35,1), new=TRUE)
boxplot(dat$hemog, horizontal = TRUE, axes = FALSE,
log= "x")
par(fig=c(0.65,1,0,0.8), new= TRUE)
boxplot(dat$wbc, axes= FALSE)
mtext("hemog x wbc", side =3, outer= TRUE, line= -3)
par(opar)
d<-density(dat$wbc, na.rm = TRUE) # returns the density data, allows for missing data
par(mfrow = c(1,2))
plot(d) # plots the results
rug(dat$wbc)
d <- density(dat$hemog, na.rm = TRUE) # returns the density data, allows for missing data
plot(d) # plots the results
rug(dat$hemog)
par(opar)
library(outliers)
dat1 <-dat[ which(dat$hemog >0), ]
dat_cochran <-cochran.test(hemog~group1,dat1)
dat_grubs <- grubbs.test(dat$hemog)
```
library(ggplot2)
plot1 <-ggplot(data = dat, aes(x = GENDER, y = hemog, fill= GENDER ))+
geom_boxplot() +
scale_x_discrete(breaks =c("f","m"),
labels=c("female","male")) +
labs(title="Hemog", x="",y="", fill= "GENDER")
plot2 <-ggplot(data = dat, aes(x = GENDER, y = wbc, fill=GENDER))+
geom_boxplot() +
scale_x_discrete(breaks =c("f","m"),
labels=c("female","male")) +
labs(title="White Blood Count by Gender ", x="",y="",fill="Gender")
library(gridExtra)
grid.arrange(plot1, plot2, ncol=2)
## remove outliers by 3 ways
#################### manually remove outliers#############################
to.remove <- c(144,197,294, 353,394,744,867,872,875,1003,1016,1025,385)
dat_manual <-dat[!dat$id %in% to.remove, ]
################### remove outliers with interquartile range###################
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
x <- dat$hemog
y <- remove_outliers(x)
hemog_new <-y
dat_interquartile <- cbind(dat,hemog_new)
x<-dat$wbc
y<- remove_outliers(x)
wbc_new <-y
dat_interquartile <- cbind(dat_interquartile,wbc_new)
#write.csv(dat_interquartile,"C:/Users/Haineycf/Documents/CAMP/CAMP_csv/camp_teach_outlier_removed.csv")
################ remove outliers based on boxplot var_name ################
## By Klodian Dhana
outlierKD <- function(dt, var) {
var_name <- eval(substitute(var),eval(dt))
na1 <- sum(is.na(var_name))
m1 <- mean(var_name, na.rm = T)
par(mfrow=c(2, 2), oma=c(0,0,3,0))
boxplot(var_name, main="With outliers")
hist(var_name, main="With outliers", xlab=NA, ylab=NA)
outlier <- boxplot.stats(var_name)$out
mo <- mean(outlier)
var_name <- ifelse(var_name %in% outlier, NA, var_name)
boxplot(var_name, main="Without outliers")
hist(var_name, main="Without outliers", xlab=NA, ylab=NA)
title("Outlier Check", outer=TRUE)
na2 <- sum(is.na(var_name))
cat("Outliers identified:", na2 - na1, "n")
cat("Propotion (%) of outliers:", round((na2 - na1) / sum(!is.na(var_name))*100, 1), "n")
cat("Mean of the outliers:", round(mo, 2), "n")
m2 <- mean(var_name, na.rm = T)
cat("Mean without removing outliers:", round(m1, 2), "n")
cat("Mean if we remove outliers:", round(m2, 2), "n")
response <- readline(prompt="Do you want to remove outliers and to replace with NA? [yes/no]: ")
if(response == "y" | response == "yes"){
dt[as.character(substitute(var))] <- invisible(var_name)
assign(as.character(as.list(match.call())$dt), dt, envir = .GlobalEnv)
cat("Outliers successfully removed", "n")
return(invisible(dt))
} else{
cat("Nothing changed", "n")
return(invisible(var_name))
}
}
dat_box<-dat
outlierKD(dat_box, hemog)
outlierKD(dat_box, wbc)
## remove outliers by 3 ways
#################### manually remove outliers#############################
to.remove <- c(144,197,294, 353,394,744,867,872,875,1003,1016,1025,385)
dat_manual <-dat[!dat$id %in% to.remove, ]
################### remove outliers with interquartile range###################
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
x <- dat$hemog
y <- remove_outliers(x)
hemog_new <-y
dat_interquartile <- cbind(dat,hemog_new)
x<-dat$wbc
y<- remove_outliers(x)
wbc_new <-y
dat_interquartile <- cbind(dat_interquartile,wbc_new)
#write.csv(dat_interquartile,"C:/Users/Haineycf/Documents/CAMP/CAMP_csv/camp_teach_outlier_removed.csv")
################ remove outliers based on boxplot var_name ################
## By Klodian Dhana
outlierKD <- function(dt, var) {
var_name <- eval(substitute(var),eval(dt))
na1 <- sum(is.na(var_name))
m1 <- mean(var_name, na.rm = T)
par(mfrow=c(2, 2), oma=c(0,0,3,0))
boxplot(var_name, main="With outliers")
hist(var_name, main="With outliers", xlab=NA, ylab=NA)
outlier <- boxplot.stats(var_name)$out
mo <- mean(outlier)
var_name <- ifelse(var_name %in% outlier, NA, var_name)
boxplot(var_name, main="Without outliers")
hist(var_name, main="Without outliers", xlab=NA, ylab=NA)
title("Outlier Check", outer=TRUE)
na2 <- sum(is.na(var_name))
cat("Outliers identified:", na2 - na1, "n")
cat("Propotion (%) of outliers:", round((na2 - na1) / sum(!is.na(var_name))*100, 1), "n")
cat("Mean of the outliers:", round(mo, 2), "n")
m2 <- mean(var_name, na.rm = T)
cat("Mean without removing outliers:", round(m1, 2), "n")
cat("Mean if we remove outliers:", round(m2, 2), "n")
response <- readline(prompt="Do you want to remove outliers and to replace with NA? [yes/no]: ")
if(response == "y" | response == "yes"){
dt[as.character(substitute(var))] <- invisible(var_name)
assign(as.character(as.list(match.call())$dt), dt, envir = .GlobalEnv)
cat("Outliers successfully removed", "n")
return(invisible(dt))
} else{
cat("Nothing changed", "n")
return(invisible(var_name))
}
}
dat_box<-dat
outlierKD(dat_box, hemog)
#par(mfrow=c(1,2), las=1)
plot0 <-ggplot(data = dat, aes(x = GENDER, y = hemog, fill=GENDER))+
geom_boxplot() +
scale_x_discrete(breaks =c("f","m"),
labels=c("female","male")) +
labs(title="Hemog by Gender", x="",y="",fill="Gender")
plot1 <-ggplot(data = dat_manual, aes(x = GENDER, y = hemog, fill=GENDER))+
geom_boxplot() +
scale_x_discrete(breaks =c("f","m"),
labels=c("female","male")) +
labs(title="Hemog by Gender Oulier Removed \n by Chebyshev's Theorem", x="",y="",fill="Gender")
plot2 <- ggplot(data = dat_interquartile, aes(x = GENDER, y = hemog_new, fill=GENDER))+
geom_boxplot() +
scale_x_discrete(breaks =c("f","m"),
labels=c("female","male")) +
labs(title="Hemog by Gender Oulier Removed \n by Interquartile Analysis", x="",y="")
z <-ggplot(data = dat_box, aes(x = GENDER, y = hemog, fill=GENDER))+
geom_boxplot() +
scale_x_discrete(breaks =c("f","m"),
labels=c("female","male")) +
labs(title="Hemog by Gender Oulier Removed \n by BoxPlot var_name",
x="",y="",fill="Gender")
library(gridExtra)
grid.arrange(plot0,plot1, plot2, ncol=2, nrow=2)
g_manual <-grubbs.test(dat_manual$hemog)
g_int<-grubbs.test(dat_interquartile$hemog_new)
### remove NAs to perform test
dat_interquartile_rm <-dat_interquartile[ which(dat_interquartile$hemog_new >0), ]
dat_box_rm <-dat_box[ which(dat_box$hemog >0), ]
dat_manual_rm <-dat_manual[ which(dat_manual$hemog >0), ]
library(outliers)   ## most can not handle NAs
inter_cochran <-cochran.test(hemog_new~group1,dat_interquartile_rm)
cheb_cochran <-cochran.test(hemog~group1,dat_manual_rm)
wbc_grub <- grubbs.test(dat$wbc)
### now do same for wbc
plot1 <-ggplot(data = dat, aes(x = GENDER, y = wbc, fill=GENDER))+
geom_boxplot() +
scale_x_discrete(breaks =c("f","m"),
labels=c("female","male")) +
labs(title="White Blood Count", x="",y="",fill="Gender")
plot2 <-ggplot(data = dat_manual, aes(x = GENDER, y = wbc, fill=GENDER))+
geom_boxplot() +
scale_x_discrete(breaks =c("f","m"),
labels=c("female","male")) +
labs(title="White Blood Count\n Oulier Removed by Chebyshev", x="",y="",fill="Gender")
plot3 <-ggplot(data = dat_interquartile, aes(x = GENDER, y = wbc_new, fill=GENDER))+
geom_boxplot() +
scale_x_discrete(breaks =c("f","m"),
labels=c("female","male")) +
labs(title="White Blood Count by Gender Oulier Removed \n by Interquartile Analysis", x="",y="",fill="Gender")
plot4 <-ggplot(data = dat_box, aes(x = GENDER, y = wbc, fill=GENDER))+
geom_boxplot() +
scale_x_discrete(breaks =c("f","m"),
labels=c("female","male")) +
labs(title="White Blood Count by Gender Oulier Removed \n by BoxPlot var_name",
x="",y="",fill="Gender")
library(gridExtra)
grid.arrange(plot1, plot2,plot3, plot4, ncol=2, nrow=2)
### remove NAs to perform test
dat1 <-dat[ which(dat$wbc >0), ]
dat_interquartile_rm <-dat_interquartile[ which(dat_interquartile$wbc_new >0), ]
dat_box_rm <-dat_box[ which(dat_box$wbc >0), ]
dat_manual_rm <-dat_manual[ which(dat_manual$wbc >0), ]
library(outliers)   ## most can not handle NAs
wbc_inter_grub <-grubbs.test(dat_interquartile_rm$wbc_new)
wbc_box_grub <-grubbs.test(dat_box_rm$wbc)
wbc_Cheb_grub <-grubbs.test(dat_manual_rm$wbc)
wbc_raw_grub <-grubbs.test(dat1$wbc)
wbc_inter_grub
wbc_box_grub
wbc_Cheb_grub
wbc_raw_grub
d<-density(dat$wbc, na.rm = TRUE) # returns the density data, allows for missing data
par(mfrow = c(1,2))
plot(d, main="Hemog") # plots the results
rug(dat$wbc)
d <- density(dat$hemog, na.rm = TRUE) # returns the density data, allows for missing data
plot(d) # plots the results
rug(dat$hemog, main="WBC")
par(opar)
par(mfrow = c(1,2))
plot(d, main="Hemog") # plots the results
rug(dat$wbc)
d <- density(dat$hemog, na.rm = TRUE) # returns the density data, allows for missing data
plot(d, main="WBC") # plots the results
rug(dat$hemog)
library(data.table)
dat <- fread("C:/Users/Haineycf/Documents/Crime_Philadelphia/crime.csv")
dat$Dispatch_Date <- as.Date(dat$Dispatch_Date)
dat$year <- format(as.Date(dat$Dispatch_Date,
format="%m/%d/%Y"),"%Y")
dat$Month <- format(as.Date(dat$Dispatch_Date,
format="%m/%d/%Y"),"%m")
dat$day <- weekdays(as.Date(dat$Dispatch_Date))
#head(dat)
dat$day <- factor(dat$day, levels=c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"))
dat$crime_type[dat$Text_General_Code == "Homicide - Gross Negligence" |
dat$Text_General_Code =="Rape" |
dat$Text_General_Code =="Robbery No Firearm" |
dat$Text_General_Code =="Aggravated Assault Firearm" |
dat$Text_General_Code =="Homicide - Justifiable" |
dat$Text_General_Code =="Homicide - Criminal" |
dat$Text_General_Code =="Aggravated Assault No Firearm" |
dat$Text_General_Code =="Robbery Firearm" ] <-"Violent_crime"
dat$crime_type[dat$Text_General_Code == "Burglary Residential" |
dat$Text_General_Code =="Burglary Non-Residential" |
dat$Text_General_Code =="Thefts" |
dat$Text_General_Code =="Theft from Vehicle" |
dat$Text_General_Code =="Motor Vehicle Theft" |
dat$Text_General_Code =="Arson" ] <-"Property"
dat$crime_type[dat$Text_General_Code == "Receiving Stolen Property"  |
dat$Text_General_Code =="Embezzlement" |
dat$Text_General_Code =="Fraud" |
dat$Text_General_Code =="Weapon Violations" |
dat$Text_General_Code =="Forgery and Counterfeiting" |
dat$Text_General_Code =="Narcotic / Drug Law Violations" |
dat$Text_General_Code =="Offenses Against Family and Children" |
dat$Text_General_Code =="DRIVING UNDER THE INFLUENCE"  |
dat$Text_General_Code =="Other Assaults"  |  ### does this belong here?
dat$Text_General_Code =="Vandalism/Criminal Mischief" ] <-"PartII"
dat$crime_type[dat$Text_General_Code == "Disorderly Conduct"  |
dat$Text_General_Code =="All Other Offenses" |
dat$Text_General_Code =="Vagrancy/Loitering" |
dat$Text_General_Code =="Other Sex Offenses (Not Commercialized)" |
dat$Text_General_Code =="Liquor Law Violations" |
dat$Text_General_Code =="Gambling Violations" |
dat$Text_General_Code =="Prostitution and Commercialized Vice"  |
dat$Text_General_Code ==""  |
dat$Text_General_Code =="Public Drunkenness" ] <-"Quality_of_Life"
crime_name <-unique(dat$Text_General_Code)
#min(dat$Dispatch_Date)
#max(dat$Dispatch_Date)
crime_occurance <-table(dat$Text_General_Code, dat$crime_type)
#head(crime_occurance)
df <-as.data.frame(crime_occurance)
df <-df[order(df$Freq, decreasing = TRUE),]
df <-df[ which(df$Freq >0), ]
row.names(df) <- NULL
colnames(df)<-c("Text-General-Code","Crime Segment","Freq")
head(df)
((22198-15768)/22198)*100
((54991-41652)/54991)100
